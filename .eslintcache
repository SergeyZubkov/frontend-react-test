[{"C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\index.js":"1","C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\App.js":"2","C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\reportWebVitals.js":"3","C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\AnimeTable\\AnimeTable.js":"4","C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\AnimeDetail\\AnimeDetail.js":"5","C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\AddItemForm\\AddItemForm.js":"6","C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\ItemsPerPageSelect\\ItemsPerPageSelect.js":"7","C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\AnimeSearch\\AnimeSearch.js":"8"},{"size":478,"mtime":1606895086051,"results":"9","hashOfConfig":"10"},{"size":3933,"mtime":1607020359291,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1711,"mtime":1606928134530,"results":"13","hashOfConfig":"10"},{"size":296,"mtime":1606927415674,"results":"14","hashOfConfig":"10"},{"size":5192,"mtime":1607018622429,"results":"15","hashOfConfig":"10"},{"size":601,"mtime":1607013012344,"results":"16","hashOfConfig":"10"},{"size":1511,"mtime":1607017321554,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"exuk9x",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\index.js",[],["39","40"],"C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\App.js",[],"C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\reportWebVitals.js",[],"C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\AnimeTable\\AnimeTable.js",["41"],"import {Table} from 'react-bootstrap';\r\nimport './AnimeTable.css'\r\n\r\nexport default ({data, onSortBy, sortBy, sortOrder, onSelectedRow, selectedRowId}) => (\r\n    <Table  bordered hover>\r\n        <thead>\r\n            <tr>\r\n            {[\r\n                {title: \"id\", property: \"id\"},\r\n                {title: \"title\", property: \"attributes.canonicalTitle\"},\r\n                {title: \"PR\", property: \"attributes.popularityRank\"},\r\n                {title: \"Created At\", property: \"attributes.startDate\"}\r\n            ].map(item => (\r\n                <th \r\n                    key={item.title}\r\n                    onClick={() => onSortBy(item.property)}\r\n                >\r\n                    {item.title}\r\n                    {sortBy === item.property\r\n                    ? (sortOrder === 'asc' \r\n                        ? <span dangerouslySetInnerHTML={{__html: \"&#9650;\"}}></span> \r\n                        : <span dangerouslySetInnerHTML={{__html: \"&#9660;\"}}></span>\r\n                        ) \r\n                    : null\r\n                    }\r\n                </th>)\r\n            )}\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {data.map(item => (\r\n                <tr \r\n                key={item.id}\r\n                onClick={() => onSelectedRow(item.id)}\r\n                className={selectedRowId === item.id ? 'selected' : null}\r\n                >\r\n                    <td>{item.id}</td>\r\n                    <td>{item.attributes.canonicalTitle}</td>\r\n                    <td>{item.attributes.popularityRank}</td>\r\n                    <td>{new Date(item.attributes.startDate).toLocaleDateString()}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </Table>\r\n)","C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\AnimeDetail\\AnimeDetail.js",["42"],"export default ({data}) => {\r\n    const {attributes} = data;\r\n    const {\r\n        canonicalTitle,\r\n        description\r\n    } = attributes;\r\n\r\n    return (\r\n        <div className='anime-detail'>\r\n            <h4>{canonicalTitle}</h4>\r\n            <p>{description} </p>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\AddItemForm\\AddItemForm.js",["43"],"import React, {Component} from 'react';\r\nimport {Form, Button, Card, Accordion} from 'react-bootstrap';\r\n\r\nexport default class AddItemForm extends Component {\r\n    state = {\r\n        formIsVisible: false,\r\n        canonicalTitle: '',\r\n        popularityRank: '',\r\n        startDate: ''\r\n    }\r\n    render() {\r\n        return (\r\n            // <div className=\"add-item-form mb-5\">\r\n            //         <Form.Group style={{overflow: 'hidden', height: this.state.formIsVisible ? \"auto\" : \"0\", padding: '0px 5px'}}>\r\n            //             <Form.Row>\r\n            //                 <Form.Label >\r\n            //                 Title\r\n            //                 </Form.Label>\r\n            //                 <Form.Control type=\"text\" name=\"canonicalTitle\" value={this.state.canonicalTitle} onChange={this.handleChange}/>\r\n            //             </Form.Row>\r\n            //             <br />\r\n            //             <Form.Row>\r\n            //                 <Form.Label >\r\n            //                 Popularity raiting\r\n            //                 </Form.Label>\r\n            //                 <Form.Control type=\"text\" name=\"popularityRank\" value={this.state.popularityRank} onChange={this.handleChange}/>\r\n            //             </Form.Row>\r\n            //             <br />\r\n            //             <Form.Row>\r\n            //                 <Form.Label >\r\n            //                 Created At\r\n            //                 </Form.Label>\r\n            //                 <Form.Control type=\"text\" name=\"startDate\" value={this.state.startDate} onChange={this.handleChange}/>\r\n            //             </Form.Row>\r\n            //             <br />\r\n            //         </Form.Group>\r\n            //     <Button onClick={this.addItem} disabled={this.state.formIsVisible&&!this.formFill()}> Добавить </Button>\r\n            // </div>\r\n            <Accordion>\r\n                <Card>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            <Form.Group >\r\n                             <Form.Row>\r\n                                 <Form.Label >\r\n                                 Title\r\n                                 </Form.Label>\r\n                                 <Form.Control type=\"text\" name=\"canonicalTitle\" value={this.state.canonicalTitle} onChange={this.handleChange}/>\r\n                             </Form.Row>\r\n                             <br />\r\n                             <Form.Row>\r\n                                 <Form.Label >\r\n                                 Popularity raiting\r\n                                 </Form.Label>\r\n                                 <Form.Control type=\"text\" name=\"popularityRank\" value={this.state.popularityRank} onChange={this.handleChange}/>\r\n                             </Form.Row>\r\n                             <br />\r\n                             <Form.Row>\r\n                                 <Form.Label >\r\n                                 Created At\r\n                                 </Form.Label>\r\n                                 <Form.Control type=\"text\" name=\"startDate\" value={this.state.startDate} onChange={this.handleChange}/>\r\n                             </Form.Row>\r\n                             <br />\r\n                         </Form.Group>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                    <Card.Header>\r\n                        <Accordion.Toggle \r\n                            as={Button}  \r\n                            eventKey=\"0\"\r\n                            onClick={this.addItem} \r\n                            disabled={this.state.formIsVisible&&!this.formFill()}\r\n                            className='mr-5'\r\n                        >\r\n                        Добавить\r\n                        </Accordion.Toggle>\r\n                        {\r\n                            this.state.formIsVisible&&<Accordion.Toggle as={Button} variant='danger' onClick={this.abort} eventKey=\"0\"> Отмена </Accordion.Toggle>\r\n                        }\r\n                    </Card.Header>\r\n                </Card>\r\n            </Accordion>\r\n        )\r\n    }\r\n\r\n    addItem = () => {\r\n        if (this.formFill()) {\r\n            const {formIsVisible, ...rest} = this.state;\r\n            this.props.onAddItem(rest)\r\n        }\r\n        this.setState(\r\n            ({formIsVisible}) => ({\r\n                formIsVisible: !formIsVisible,\r\n                canonicalTitle: '',\r\n                popularityRank: '',\r\n                startDate: ''\r\n            })\r\n        );\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState(\r\n            {[e.target.name]: e.target.value}            \r\n        )\r\n    }\r\n\r\n    formFill = () => {\r\n        let {canonicalTitle, popularityRank, startDate, formIsVisible} = this.state;\r\n        return canonicalTitle&&popularityRank&&startDate\r\n    }\r\n\r\n    abort = () => {\r\n        this.setState(\r\n            ({formIsVisible}) => ({\r\n                formIsVisible: !formIsVisible,\r\n                canonicalTitle: '',\r\n                popularityRank: '',\r\n                startDate: ''\r\n            })\r\n        );\r\n    }\r\n}","C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\ItemsPerPageSelect\\ItemsPerPageSelect.js",["44"],"import {Form} from 'react-bootstrap';\r\n\r\nexport default ({range, onSelect}) => (\r\n    <Form >\r\n        <Form.Group style={{display: 'flex'}}>\r\n            <Form.Label className=\"mr-2\">элм'ов/стр</Form.Label>\r\n            <Form.Control \r\n                as=\"select\" \r\n                onChange={(e) => onSelect(e.target.value)}\r\n                style={{\r\n                    width: 'auto'\r\n                }}\r\n            >\r\n                {range.map(v => (<option style={{display: 'inline-block'}} value={v}> {v} </option>))}\r\n            </Form.Control>\r\n        </Form.Group>\r\n    </Form>\r\n)","C:\\Users\\Sergey\\Desktop\\work\\work\\react-frontend-javascript-test\\src\\AnimeSearch\\AnimeSearch.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":4,"column":1,"nodeType":"51","endLine":45,"endColumn":2},{"ruleId":"49","severity":1,"message":"50","line":1,"column":1,"nodeType":"51","endLine":14,"endColumn":2},{"ruleId":"52","severity":1,"message":"53","line":109,"column":57,"nodeType":"54","messageId":"55","endLine":109,"endColumn":70},{"ruleId":"49","severity":1,"message":"50","line":3,"column":1,"nodeType":"51","endLine":18,"endColumn":2},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'formIsVisible' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]